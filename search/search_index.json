{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"napari-micromanager","text":"<p>GUI interface between napari and micromanager powered by pymmcore-plus and pymmcore-widgets</p> <p>[!NOTE] While this plugin will continue to be maintained, we are focusing current efforts on a napari-independent gui (using ndv) for reasons of performance and minimizing dependencies. Please follow https://github.com/pymmcore-plus/pymmcore-gui for details</p> <p></p>"},{"location":"#installation","title":"Installation","text":"<p>You can install <code>napari-micromanager</code> via pip:</p> <pre><code>pip install napari-micromanager\n</code></pre> <p>You will also need a Qt backend such as PySide2/6, or PyQt5/6.  PyQt is preferred and receives more testing. If you've previously installed napari into this environment with <code>pip install napari[all]</code>, then you will likely already have it. If not, you will also need to install a Qt backend of your choice:</p> <pre><code>pip install pyqt5  # or any of {pyqt5, pyqt6, pyside2, pyside6}\n</code></pre>"},{"location":"#getting-micromanager-adapters","title":"Getting micromanager adapters","text":"<p>The easiest way to get the micromanager adapters is to use:</p> <pre><code>mmcore install\n</code></pre> <p>this will install micromanager to the pymmcore_plus folder in your site-package; use this to see where:</p> <pre><code>python -c \"from pymmcore_plus import find_micromanager; print(find_micromanager())\"\n</code></pre> <p>alternatively, you can direct pymmcore_plus to your own micromanager installation with the <code>MICROMANAGER_PATH</code> environment variable:</p> <pre><code>export MICROMANAGER_PATH='/path/to/Micro-Manager-...'\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are very welcome.</p>"},{"location":"#launching-napari-with-plugin","title":"Launching napari with plugin","text":"<p>You can launch napari and automatically load this plugin using the <code>launch-dev.py</code> script:</p> <pre><code>python launch-dev.py\n</code></pre> <p>Alternatively you can run:</p> <pre><code>napari -w napari-micromanager\n</code></pre>"},{"location":"#license","title":"License","text":"<p>Distributed under the terms of the BSD-3 license, \"napari-micromanager\" is free and open source software</p>"},{"location":"#issues","title":"Issues","text":"<p>If you encounter any problems, please file an issue along with a detailed description.</p>"},{"location":"getting_started/","title":"Getting Started","text":""},{"location":"getting_started/#installation","title":"Installation","text":""},{"location":"getting_started/#installing-napari-micromanager","title":"Installing napari-micromanager","text":"<pre><code>pip install napari-micromanager PyQt5\n# you may also pick from PySide2, PyQt6, PySide6 for your Qt backend\n</code></pre> <p>You will then also need to grab the <code>Micro-Manager</code> device adapters</p> <pre><code>mmcore install\n</code></pre> <p>See <code>pymmcore-plus</code> documentation page for details on the <code>mmcore</code> helper command.</p>"},{"location":"getting_started/#usage","title":"Usage","text":"<pre><code>napari-micromanager\n</code></pre> <p>This will open a new napari window with the micromanager plugin enabled.</p> <p>Select a MM Config file at the top left of the window, then click load.</p> <p>Then ... much of the rest is hopefully self explanatory .</p> <p>Underlying napari-micro-manager is the <code>pymmcore-plus</code> package, which is a python wrapper around <code>pymmcore</code> and the C++ CMMCore library (not pycro-manager and not the Java-based MMStudio).  There is much more documentation available at the <code>pymmcore-plus</code> documentation page, and widgets in the GUI are all powered by the <code>pymmcore-widgets</code> package. See the <code>pymmcore-widgets</code> documentation page for more details.</p>"}]}