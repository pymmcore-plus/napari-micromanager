name: Run Tests

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
  schedule:
    - cron: "0 16 * * 1" # monday at noon est

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: pipx run check-manifest

  test:
    name: py${{ matrix.python-version }} ${{ matrix.backend }} ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-13]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        backend: [pyqt5]
        include:
          - python-version: "3.11"
            platform: macos-13
            backend: pyqt6
          - python-version: "3.11"
            platform: ubuntu-latest
            backend: pyqt5

    steps:
      - uses: actions/checkout@v5

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - uses: pyvista/setup-headless-display-action@main
        with:
          qt: true

      - name: Install dependencies
        run: uv sync --extra ${{ matrix.backend }}

      - name: Get pymmcore version
        shell: bash
        run: |
          ver=$(uv run python -c 'from pymmcore_plus import _pymmcore;print(_pymmcore.version_info.device_interface)')
          echo "PYMM_VERSION=$ver" >> $GITHUB_ENV

      - uses: pymmcore-plus/setup-mm-test-adapters@main
        with:
          version: ${{ env.PYMM_VERSION }}

      - name: Test
        run: uv run pytest -v --color=yes --cov=napari_micromanager --cov-report=xml

      - name: Coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    name: Deploy
    needs: test
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: ðŸ‘· Build
        run: |
          python -m pip install build check-manifest
          check-manifest
          python -m build
      - name: ðŸš¢ Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: "./dist/*"
